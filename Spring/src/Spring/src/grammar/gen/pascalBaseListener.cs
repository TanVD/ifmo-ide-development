//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/tanvd/csc/ide/pascal-lang/Spring/src/Spring/src/grammar/pascal.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IpascalListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class pascalBaseListener : IpascalListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] pascalParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] pascalParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.programHeading"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramHeading([NotNull] pascalParser.ProgramHeadingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.programHeading"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramHeading([NotNull] pascalParser.ProgramHeadingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] pascalParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] pascalParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] pascalParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] pascalParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.usesUnitsPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsesUnitsPart([NotNull] pascalParser.UsesUnitsPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.usesUnitsPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsesUnitsPart([NotNull] pascalParser.UsesUnitsPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.labelDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabelDeclarationPart([NotNull] pascalParser.LabelDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.labelDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabelDeclarationPart([NotNull] pascalParser.LabelDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] pascalParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] pascalParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.constantDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDefinitionPart([NotNull] pascalParser.ConstantDefinitionPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.constantDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDefinitionPart([NotNull] pascalParser.ConstantDefinitionPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.constantDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDefinition([NotNull] pascalParser.ConstantDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.constantDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDefinition([NotNull] pascalParser.ConstantDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.constantChr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantChr([NotNull] pascalParser.ConstantChrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.constantChr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantChr([NotNull] pascalParser.ConstantChrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] pascalParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] pascalParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unsignedNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedNumber([NotNull] pascalParser.UnsignedNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unsignedNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedNumber([NotNull] pascalParser.UnsignedNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unsignedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedInteger([NotNull] pascalParser.UnsignedIntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unsignedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedInteger([NotNull] pascalParser.UnsignedIntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unsignedReal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedReal([NotNull] pascalParser.UnsignedRealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unsignedReal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedReal([NotNull] pascalParser.UnsignedRealContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSign([NotNull] pascalParser.SignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSign([NotNull] pascalParser.SignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] pascalParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] pascalParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] pascalParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] pascalParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.typeDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDefinitionPart([NotNull] pascalParser.TypeDefinitionPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.typeDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDefinitionPart([NotNull] pascalParser.TypeDefinitionPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.typeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDefinition([NotNull] pascalParser.TypeDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.typeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDefinition([NotNull] pascalParser.TypeDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] pascalParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] pascalParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.procedureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureType([NotNull] pascalParser.ProcedureTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.procedureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureType([NotNull] pascalParser.ProcedureTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] pascalParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] pascalParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleType([NotNull] pascalParser.SimpleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleType([NotNull] pascalParser.SimpleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalarType([NotNull] pascalParser.ScalarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalarType([NotNull] pascalParser.ScalarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.subrangeType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubrangeType([NotNull] pascalParser.SubrangeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.subrangeType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubrangeType([NotNull] pascalParser.SubrangeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeIdentifier([NotNull] pascalParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeIdentifier([NotNull] pascalParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.structuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructuredType([NotNull] pascalParser.StructuredTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.structuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructuredType([NotNull] pascalParser.StructuredTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unpackedStructuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpackedStructuredType([NotNull] pascalParser.UnpackedStructuredTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unpackedStructuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpackedStructuredType([NotNull] pascalParser.UnpackedStructuredTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.stringtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringtype([NotNull] pascalParser.StringtypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.stringtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringtype([NotNull] pascalParser.StringtypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] pascalParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] pascalParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] pascalParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] pascalParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.indexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexType([NotNull] pascalParser.IndexTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.indexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexType([NotNull] pascalParser.IndexTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComponentType([NotNull] pascalParser.ComponentTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComponentType([NotNull] pascalParser.ComponentTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.recordType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordType([NotNull] pascalParser.RecordTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.recordType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordType([NotNull] pascalParser.RecordTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.fieldList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldList([NotNull] pascalParser.FieldListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.fieldList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldList([NotNull] pascalParser.FieldListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.fixedPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedPart([NotNull] pascalParser.FixedPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.fixedPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedPart([NotNull] pascalParser.FixedPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.recordSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordSection([NotNull] pascalParser.RecordSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.recordSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordSection([NotNull] pascalParser.RecordSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.variantPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantPart([NotNull] pascalParser.VariantPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.variantPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantPart([NotNull] pascalParser.VariantPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTag([NotNull] pascalParser.TagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTag([NotNull] pascalParser.TagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.variant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariant([NotNull] pascalParser.VariantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.variant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariant([NotNull] pascalParser.VariantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetType([NotNull] pascalParser.SetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetType([NotNull] pascalParser.SetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] pascalParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] pascalParser.BaseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.fileType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileType([NotNull] pascalParser.FileTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.fileType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileType([NotNull] pascalParser.FileTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] pascalParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] pascalParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.variableDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationPart([NotNull] pascalParser.VariableDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.variableDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationPart([NotNull] pascalParser.VariableDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] pascalParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] pascalParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.procedureAndFunctionDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureAndFunctionDeclarationPart([NotNull] pascalParser.ProcedureAndFunctionDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.procedureAndFunctionDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureAndFunctionDeclarationPart([NotNull] pascalParser.ProcedureAndFunctionDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.procedureOrFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureOrFunctionDeclaration([NotNull] pascalParser.ProcedureOrFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.procedureOrFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureOrFunctionDeclaration([NotNull] pascalParser.ProcedureOrFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.procedureDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureDeclaration([NotNull] pascalParser.ProcedureDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.procedureDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureDeclaration([NotNull] pascalParser.ProcedureDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] pascalParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] pascalParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.formalParameterSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterSection([NotNull] pascalParser.FormalParameterSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.formalParameterSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterSection([NotNull] pascalParser.FormalParameterSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.parameterGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterGroup([NotNull] pascalParser.ParameterGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.parameterGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterGroup([NotNull] pascalParser.ParameterGroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] pascalParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] pascalParser.IdentifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.constList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstList([NotNull] pascalParser.ConstListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.constList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstList([NotNull] pascalParser.ConstListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] pascalParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] pascalParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.resultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResultType([NotNull] pascalParser.ResultTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.resultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResultType([NotNull] pascalParser.ResultTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] pascalParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] pascalParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unlabelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnlabelledStatement([NotNull] pascalParser.UnlabelledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unlabelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnlabelledStatement([NotNull] pascalParser.UnlabelledStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.simpleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleStatement([NotNull] pascalParser.SimpleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.simpleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleStatement([NotNull] pascalParser.SimpleStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] pascalParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] pascalParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] pascalParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] pascalParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] pascalParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] pascalParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.relationaloperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationaloperator([NotNull] pascalParser.RelationaloperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.relationaloperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationaloperator([NotNull] pascalParser.RelationaloperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.simpleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleExpression([NotNull] pascalParser.SimpleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.simpleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleExpression([NotNull] pascalParser.SimpleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.additiveoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveoperator([NotNull] pascalParser.AdditiveoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.additiveoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveoperator([NotNull] pascalParser.AdditiveoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] pascalParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] pascalParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.multiplicativeoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeoperator([NotNull] pascalParser.MultiplicativeoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.multiplicativeoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeoperator([NotNull] pascalParser.MultiplicativeoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.signedFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignedFactor([NotNull] pascalParser.SignedFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.signedFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignedFactor([NotNull] pascalParser.SignedFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] pascalParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] pascalParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.unsignedConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedConstant([NotNull] pascalParser.UnsignedConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.unsignedConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedConstant([NotNull] pascalParser.UnsignedConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.functionDesignator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDesignator([NotNull] pascalParser.FunctionDesignatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.functionDesignator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDesignator([NotNull] pascalParser.FunctionDesignatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] pascalParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] pascalParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet([NotNull] pascalParser.SetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet([NotNull] pascalParser.SetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementList([NotNull] pascalParser.ElementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementList([NotNull] pascalParser.ElementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] pascalParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] pascalParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.procedureStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureStatement([NotNull] pascalParser.ProcedureStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.procedureStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureStatement([NotNull] pascalParser.ProcedureStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.actualParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActualParameter([NotNull] pascalParser.ActualParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.actualParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActualParameter([NotNull] pascalParser.ActualParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.parameterwidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterwidth([NotNull] pascalParser.ParameterwidthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.parameterwidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterwidth([NotNull] pascalParser.ParameterwidthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] pascalParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] pascalParser.GotoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] pascalParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] pascalParser.EmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty([NotNull] pascalParser.EmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty([NotNull] pascalParser.EmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.structuredStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructuredStatement([NotNull] pascalParser.StructuredStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.structuredStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructuredStatement([NotNull] pascalParser.StructuredStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStatement([NotNull] pascalParser.CompoundStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStatement([NotNull] pascalParser.CompoundStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] pascalParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] pascalParser.StatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.conditionalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalStatement([NotNull] pascalParser.ConditionalStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.conditionalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalStatement([NotNull] pascalParser.ConditionalStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] pascalParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] pascalParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] pascalParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] pascalParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.caseListElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseListElement([NotNull] pascalParser.CaseListElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.caseListElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseListElement([NotNull] pascalParser.CaseListElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.repetetiveStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepetetiveStatement([NotNull] pascalParser.RepetetiveStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.repetetiveStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepetetiveStatement([NotNull] pascalParser.RepetetiveStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] pascalParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] pascalParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatement([NotNull] pascalParser.RepeatStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatement([NotNull] pascalParser.RepeatStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] pascalParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] pascalParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.forList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForList([NotNull] pascalParser.ForListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.forList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForList([NotNull] pascalParser.ForListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.initialValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitialValue([NotNull] pascalParser.InitialValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.initialValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitialValue([NotNull] pascalParser.InitialValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.finalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinalValue([NotNull] pascalParser.FinalValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.finalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinalValue([NotNull] pascalParser.FinalValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStatement([NotNull] pascalParser.WithStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStatement([NotNull] pascalParser.WithStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pascalParser.recordVariableList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordVariableList([NotNull] pascalParser.RecordVariableListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pascalParser.recordVariableList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordVariableList([NotNull] pascalParser.RecordVariableListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
